//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DataBoundApp1.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1.Models")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1.Models")]
    public partial class Note : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContentField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private int Id_UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id_User {
            get {
                return this.Id_UserField;
            }
            set {
                if ((this.Id_UserField.Equals(value) != true)) {
                    this.Id_UserField = value;
                    this.RaisePropertyChanged("Id_User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1.Models")]
    public partial class Group : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.IAsyncResult BeginLogin(DataBoundApp1.ServiceReference1.User user, System.AsyncCallback callback, object asyncState);
        
        int EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.IAsyncResult BeginRegister(DataBoundApp1.ServiceReference1.User user, System.AsyncCallback callback, object asyncState);
        
        int EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetUserNotes", ReplyAction="http://tempuri.org/IService1/GetUserNotesResponse")]
        System.IAsyncResult BeginGetUserNotes(int UserId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> EndGetUserNotes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/NewNote", ReplyAction="http://tempuri.org/IService1/NewNoteResponse")]
        System.IAsyncResult BeginNewNote(DataBoundApp1.ServiceReference1.Note note, System.AsyncCallback callback, object asyncState);
        
        void EndNewNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateNote", ReplyAction="http://tempuri.org/IService1/UpdateNoteResponse")]
        System.IAsyncResult BeginUpdateNote(DataBoundApp1.ServiceReference1.Note note, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/RemoveNote", ReplyAction="http://tempuri.org/IService1/RemoveNoteResponse")]
        System.IAsyncResult BeginRemoveNote(int noteId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/NewGroup", ReplyAction="http://tempuri.org/IService1/NewGroupResponse")]
        System.IAsyncResult BeginNewGroup(DataBoundApp1.ServiceReference1.Group group, int userId, System.AsyncCallback callback, object asyncState);
        
        int EndNewGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/RemoveGroup", ReplyAction="http://tempuri.org/IService1/RemoveGroupResponse")]
        System.IAsyncResult BeginRemoveGroup(int groupId, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GroupAddNote", ReplyAction="http://tempuri.org/IService1/GroupAddNoteResponse")]
        System.IAsyncResult BeginGroupAddNote(int groupId, int noteId, System.AsyncCallback callback, object asyncState);
        
        void EndGroupAddNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GroupRemoveNote", ReplyAction="http://tempuri.org/IService1/GroupRemoveNoteResponse")]
        System.IAsyncResult BeginGroupRemoveNote(int groupId, int noteId, System.AsyncCallback callback, object asyncState);
        
        void EndGroupRemoveNote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GroupAddUser", ReplyAction="http://tempuri.org/IService1/GroupAddUserResponse")]
        System.IAsyncResult BeginGroupAddUser(int groupId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndGroupAddUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GroupRemoveUser", ReplyAction="http://tempuri.org/IService1/GroupRemoveUserResponse")]
        System.IAsyncResult BeginGroupRemoveUser(int groupId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndGroupRemoveUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetUserGroups", ReplyAction="http://tempuri.org/IService1/GetUserGroupsResponse")]
        System.IAsyncResult BeginGetUserGroups(int sserId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group> EndGetUserGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetGroupNotes", ReplyAction="http://tempuri.org/IService1/GetGroupNotesResponse")]
        System.IAsyncResult BeginGetGroupNotes(int groupId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> EndGetGroupNotes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetGroupUsers", ReplyAction="http://tempuri.org/IService1/GetGroupUsersResponse")]
        System.IAsyncResult BeginGetGroupUsers(int groupId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> EndGetGroupUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> EndGetUsers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : DataBoundApp1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DataBoundApp1.ServiceReference1.IService1>, DataBoundApp1.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserNotesDelegate;
        
        private EndOperationDelegate onEndGetUserNotesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserNotesCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewNoteDelegate;
        
        private EndOperationDelegate onEndNewNoteDelegate;
        
        private System.Threading.SendOrPostCallback onNewNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateNoteDelegate;
        
        private EndOperationDelegate onEndUpdateNoteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveNoteDelegate;
        
        private EndOperationDelegate onEndRemoveNoteDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewGroupDelegate;
        
        private EndOperationDelegate onEndNewGroupDelegate;
        
        private System.Threading.SendOrPostCallback onNewGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveGroupDelegate;
        
        private EndOperationDelegate onEndRemoveGroupDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupAddNoteDelegate;
        
        private EndOperationDelegate onEndGroupAddNoteDelegate;
        
        private System.Threading.SendOrPostCallback onGroupAddNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupRemoveNoteDelegate;
        
        private EndOperationDelegate onEndGroupRemoveNoteDelegate;
        
        private System.Threading.SendOrPostCallback onGroupRemoveNoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupAddUserDelegate;
        
        private EndOperationDelegate onEndGroupAddUserDelegate;
        
        private System.Threading.SendOrPostCallback onGroupAddUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGroupRemoveUserDelegate;
        
        private EndOperationDelegate onEndGroupRemoveUserDelegate;
        
        private System.Threading.SendOrPostCallback onGroupRemoveUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserGroupsDelegate;
        
        private EndOperationDelegate onEndGetUserGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupNotesDelegate;
        
        private EndOperationDelegate onEndGetGroupNotesDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupNotesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupUsersDelegate;
        
        private EndOperationDelegate onEndGetGroupUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<GetUserNotesCompletedEventArgs> GetUserNotesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NewNoteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateNoteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveNoteCompleted;
        
        public event System.EventHandler<NewGroupCompletedEventArgs> NewGroupCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveGroupCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupAddNoteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupRemoveNoteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupAddUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GroupRemoveUserCompleted;
        
        public event System.EventHandler<GetUserGroupsCompletedEventArgs> GetUserGroupsCompleted;
        
        public event System.EventHandler<GetGroupNotesCompletedEventArgs> GetGroupNotesCompleted;
        
        public event System.EventHandler<GetGroupUsersCompletedEventArgs> GetGroupUsersCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginLogin(DataBoundApp1.ServiceReference1.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int DataBoundApp1.ServiceReference1.IService1.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DataBoundApp1.ServiceReference1.User user = ((DataBoundApp1.ServiceReference1.User)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginLogin(user, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            int retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(DataBoundApp1.ServiceReference1.User user) {
            this.LoginAsync(user, null);
        }
        
        public void LoginAsync(DataBoundApp1.ServiceReference1.User user, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        user}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginRegister(DataBoundApp1.ServiceReference1.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int DataBoundApp1.ServiceReference1.IService1.EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DataBoundApp1.ServiceReference1.User user = ((DataBoundApp1.ServiceReference1.User)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginRegister(user, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            int retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(DataBoundApp1.ServiceReference1.User user) {
            this.RegisterAsync(user, null);
        }
        
        public void RegisterAsync(DataBoundApp1.ServiceReference1.User user, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        user}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGetUserNotes(int UserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserNotes(UserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> DataBoundApp1.ServiceReference1.IService1.EndGetUserNotes(System.IAsyncResult result) {
            return base.Channel.EndGetUserNotes(result);
        }
        
        private System.IAsyncResult OnBeginGetUserNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserId = ((int)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGetUserNotes(UserId, callback, asyncState);
        }
        
        private object[] OnEndGetUserNotes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGetUserNotes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserNotesCompleted(object state) {
            if ((this.GetUserNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserNotesCompleted(this, new GetUserNotesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserNotesAsync(int UserId) {
            this.GetUserNotesAsync(UserId, null);
        }
        
        public void GetUserNotesAsync(int UserId, object userState) {
            if ((this.onBeginGetUserNotesDelegate == null)) {
                this.onBeginGetUserNotesDelegate = new BeginOperationDelegate(this.OnBeginGetUserNotes);
            }
            if ((this.onEndGetUserNotesDelegate == null)) {
                this.onEndGetUserNotesDelegate = new EndOperationDelegate(this.OnEndGetUserNotes);
            }
            if ((this.onGetUserNotesCompletedDelegate == null)) {
                this.onGetUserNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserNotesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserNotesDelegate, new object[] {
                        UserId}, this.onEndGetUserNotesDelegate, this.onGetUserNotesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginNewNote(DataBoundApp1.ServiceReference1.Note note, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewNote(note, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndNewNote(System.IAsyncResult result) {
            base.Channel.EndNewNote(result);
        }
        
        private System.IAsyncResult OnBeginNewNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DataBoundApp1.ServiceReference1.Note note = ((DataBoundApp1.ServiceReference1.Note)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginNewNote(note, callback, asyncState);
        }
        
        private object[] OnEndNewNote(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndNewNote(result);
            return null;
        }
        
        private void OnNewNoteCompleted(object state) {
            if ((this.NewNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewNoteAsync(DataBoundApp1.ServiceReference1.Note note) {
            this.NewNoteAsync(note, null);
        }
        
        public void NewNoteAsync(DataBoundApp1.ServiceReference1.Note note, object userState) {
            if ((this.onBeginNewNoteDelegate == null)) {
                this.onBeginNewNoteDelegate = new BeginOperationDelegate(this.OnBeginNewNote);
            }
            if ((this.onEndNewNoteDelegate == null)) {
                this.onEndNewNoteDelegate = new EndOperationDelegate(this.OnEndNewNote);
            }
            if ((this.onNewNoteCompletedDelegate == null)) {
                this.onNewNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewNoteCompleted);
            }
            base.InvokeAsync(this.onBeginNewNoteDelegate, new object[] {
                        note}, this.onEndNewNoteDelegate, this.onNewNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginUpdateNote(DataBoundApp1.ServiceReference1.Note note, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNote(note, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndUpdateNote(System.IAsyncResult result) {
            base.Channel.EndUpdateNote(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DataBoundApp1.ServiceReference1.Note note = ((DataBoundApp1.ServiceReference1.Note)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginUpdateNote(note, callback, asyncState);
        }
        
        private object[] OnEndUpdateNote(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndUpdateNote(result);
            return null;
        }
        
        private void OnUpdateNoteCompleted(object state) {
            if ((this.UpdateNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNoteAsync(DataBoundApp1.ServiceReference1.Note note) {
            this.UpdateNoteAsync(note, null);
        }
        
        public void UpdateNoteAsync(DataBoundApp1.ServiceReference1.Note note, object userState) {
            if ((this.onBeginUpdateNoteDelegate == null)) {
                this.onBeginUpdateNoteDelegate = new BeginOperationDelegate(this.OnBeginUpdateNote);
            }
            if ((this.onEndUpdateNoteDelegate == null)) {
                this.onEndUpdateNoteDelegate = new EndOperationDelegate(this.OnEndUpdateNote);
            }
            if ((this.onUpdateNoteCompletedDelegate == null)) {
                this.onUpdateNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNoteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNoteDelegate, new object[] {
                        note}, this.onEndUpdateNoteDelegate, this.onUpdateNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginRemoveNote(int noteId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveNote(noteId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndRemoveNote(System.IAsyncResult result) {
            base.Channel.EndRemoveNote(result);
        }
        
        private System.IAsyncResult OnBeginRemoveNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int noteId = ((int)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginRemoveNote(noteId, callback, asyncState);
        }
        
        private object[] OnEndRemoveNote(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndRemoveNote(result);
            return null;
        }
        
        private void OnRemoveNoteCompleted(object state) {
            if ((this.RemoveNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveNoteAsync(int noteId) {
            this.RemoveNoteAsync(noteId, null);
        }
        
        public void RemoveNoteAsync(int noteId, object userState) {
            if ((this.onBeginRemoveNoteDelegate == null)) {
                this.onBeginRemoveNoteDelegate = new BeginOperationDelegate(this.OnBeginRemoveNote);
            }
            if ((this.onEndRemoveNoteDelegate == null)) {
                this.onEndRemoveNoteDelegate = new EndOperationDelegate(this.OnEndRemoveNote);
            }
            if ((this.onRemoveNoteCompletedDelegate == null)) {
                this.onRemoveNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveNoteCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveNoteDelegate, new object[] {
                        noteId}, this.onEndRemoveNoteDelegate, this.onRemoveNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginNewGroup(DataBoundApp1.ServiceReference1.Group group, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewGroup(group, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int DataBoundApp1.ServiceReference1.IService1.EndNewGroup(System.IAsyncResult result) {
            return base.Channel.EndNewGroup(result);
        }
        
        private System.IAsyncResult OnBeginNewGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DataBoundApp1.ServiceReference1.Group group = ((DataBoundApp1.ServiceReference1.Group)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginNewGroup(group, userId, callback, asyncState);
        }
        
        private object[] OnEndNewGroup(System.IAsyncResult result) {
            int retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndNewGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewGroupCompleted(object state) {
            if ((this.NewGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewGroupCompleted(this, new NewGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewGroupAsync(DataBoundApp1.ServiceReference1.Group group, int userId) {
            this.NewGroupAsync(group, userId, null);
        }
        
        public void NewGroupAsync(DataBoundApp1.ServiceReference1.Group group, int userId, object userState) {
            if ((this.onBeginNewGroupDelegate == null)) {
                this.onBeginNewGroupDelegate = new BeginOperationDelegate(this.OnBeginNewGroup);
            }
            if ((this.onEndNewGroupDelegate == null)) {
                this.onEndNewGroupDelegate = new EndOperationDelegate(this.OnEndNewGroup);
            }
            if ((this.onNewGroupCompletedDelegate == null)) {
                this.onNewGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewGroupCompleted);
            }
            base.InvokeAsync(this.onBeginNewGroupDelegate, new object[] {
                        group,
                        userId}, this.onEndNewGroupDelegate, this.onNewGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginRemoveGroup(int groupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveGroup(groupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndRemoveGroup(System.IAsyncResult result) {
            base.Channel.EndRemoveGroup(result);
        }
        
        private System.IAsyncResult OnBeginRemoveGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginRemoveGroup(groupId, callback, asyncState);
        }
        
        private object[] OnEndRemoveGroup(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndRemoveGroup(result);
            return null;
        }
        
        private void OnRemoveGroupCompleted(object state) {
            if ((this.RemoveGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveGroupAsync(int groupId) {
            this.RemoveGroupAsync(groupId, null);
        }
        
        public void RemoveGroupAsync(int groupId, object userState) {
            if ((this.onBeginRemoveGroupDelegate == null)) {
                this.onBeginRemoveGroupDelegate = new BeginOperationDelegate(this.OnBeginRemoveGroup);
            }
            if ((this.onEndRemoveGroupDelegate == null)) {
                this.onEndRemoveGroupDelegate = new EndOperationDelegate(this.OnEndRemoveGroup);
            }
            if ((this.onRemoveGroupCompletedDelegate == null)) {
                this.onRemoveGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveGroupCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveGroupDelegate, new object[] {
                        groupId}, this.onEndRemoveGroupDelegate, this.onRemoveGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGroupAddNote(int groupId, int noteId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupAddNote(groupId, noteId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndGroupAddNote(System.IAsyncResult result) {
            base.Channel.EndGroupAddNote(result);
        }
        
        private System.IAsyncResult OnBeginGroupAddNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            int noteId = ((int)(inValues[1]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGroupAddNote(groupId, noteId, callback, asyncState);
        }
        
        private object[] OnEndGroupAddNote(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGroupAddNote(result);
            return null;
        }
        
        private void OnGroupAddNoteCompleted(object state) {
            if ((this.GroupAddNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupAddNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupAddNoteAsync(int groupId, int noteId) {
            this.GroupAddNoteAsync(groupId, noteId, null);
        }
        
        public void GroupAddNoteAsync(int groupId, int noteId, object userState) {
            if ((this.onBeginGroupAddNoteDelegate == null)) {
                this.onBeginGroupAddNoteDelegate = new BeginOperationDelegate(this.OnBeginGroupAddNote);
            }
            if ((this.onEndGroupAddNoteDelegate == null)) {
                this.onEndGroupAddNoteDelegate = new EndOperationDelegate(this.OnEndGroupAddNote);
            }
            if ((this.onGroupAddNoteCompletedDelegate == null)) {
                this.onGroupAddNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupAddNoteCompleted);
            }
            base.InvokeAsync(this.onBeginGroupAddNoteDelegate, new object[] {
                        groupId,
                        noteId}, this.onEndGroupAddNoteDelegate, this.onGroupAddNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGroupRemoveNote(int groupId, int noteId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupRemoveNote(groupId, noteId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndGroupRemoveNote(System.IAsyncResult result) {
            base.Channel.EndGroupRemoveNote(result);
        }
        
        private System.IAsyncResult OnBeginGroupRemoveNote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            int noteId = ((int)(inValues[1]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGroupRemoveNote(groupId, noteId, callback, asyncState);
        }
        
        private object[] OnEndGroupRemoveNote(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGroupRemoveNote(result);
            return null;
        }
        
        private void OnGroupRemoveNoteCompleted(object state) {
            if ((this.GroupRemoveNoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupRemoveNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupRemoveNoteAsync(int groupId, int noteId) {
            this.GroupRemoveNoteAsync(groupId, noteId, null);
        }
        
        public void GroupRemoveNoteAsync(int groupId, int noteId, object userState) {
            if ((this.onBeginGroupRemoveNoteDelegate == null)) {
                this.onBeginGroupRemoveNoteDelegate = new BeginOperationDelegate(this.OnBeginGroupRemoveNote);
            }
            if ((this.onEndGroupRemoveNoteDelegate == null)) {
                this.onEndGroupRemoveNoteDelegate = new EndOperationDelegate(this.OnEndGroupRemoveNote);
            }
            if ((this.onGroupRemoveNoteCompletedDelegate == null)) {
                this.onGroupRemoveNoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupRemoveNoteCompleted);
            }
            base.InvokeAsync(this.onBeginGroupRemoveNoteDelegate, new object[] {
                        groupId,
                        noteId}, this.onEndGroupRemoveNoteDelegate, this.onGroupRemoveNoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGroupAddUser(int groupId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupAddUser(groupId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndGroupAddUser(System.IAsyncResult result) {
            base.Channel.EndGroupAddUser(result);
        }
        
        private System.IAsyncResult OnBeginGroupAddUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGroupAddUser(groupId, userId, callback, asyncState);
        }
        
        private object[] OnEndGroupAddUser(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGroupAddUser(result);
            return null;
        }
        
        private void OnGroupAddUserCompleted(object state) {
            if ((this.GroupAddUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupAddUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupAddUserAsync(int groupId, int userId) {
            this.GroupAddUserAsync(groupId, userId, null);
        }
        
        public void GroupAddUserAsync(int groupId, int userId, object userState) {
            if ((this.onBeginGroupAddUserDelegate == null)) {
                this.onBeginGroupAddUserDelegate = new BeginOperationDelegate(this.OnBeginGroupAddUser);
            }
            if ((this.onEndGroupAddUserDelegate == null)) {
                this.onEndGroupAddUserDelegate = new EndOperationDelegate(this.OnEndGroupAddUser);
            }
            if ((this.onGroupAddUserCompletedDelegate == null)) {
                this.onGroupAddUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupAddUserCompleted);
            }
            base.InvokeAsync(this.onBeginGroupAddUserDelegate, new object[] {
                        groupId,
                        userId}, this.onEndGroupAddUserDelegate, this.onGroupAddUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGroupRemoveUser(int groupId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGroupRemoveUser(groupId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DataBoundApp1.ServiceReference1.IService1.EndGroupRemoveUser(System.IAsyncResult result) {
            base.Channel.EndGroupRemoveUser(result);
        }
        
        private System.IAsyncResult OnBeginGroupRemoveUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGroupRemoveUser(groupId, userId, callback, asyncState);
        }
        
        private object[] OnEndGroupRemoveUser(System.IAsyncResult result) {
            ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGroupRemoveUser(result);
            return null;
        }
        
        private void OnGroupRemoveUserCompleted(object state) {
            if ((this.GroupRemoveUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GroupRemoveUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GroupRemoveUserAsync(int groupId, int userId) {
            this.GroupRemoveUserAsync(groupId, userId, null);
        }
        
        public void GroupRemoveUserAsync(int groupId, int userId, object userState) {
            if ((this.onBeginGroupRemoveUserDelegate == null)) {
                this.onBeginGroupRemoveUserDelegate = new BeginOperationDelegate(this.OnBeginGroupRemoveUser);
            }
            if ((this.onEndGroupRemoveUserDelegate == null)) {
                this.onEndGroupRemoveUserDelegate = new EndOperationDelegate(this.OnEndGroupRemoveUser);
            }
            if ((this.onGroupRemoveUserCompletedDelegate == null)) {
                this.onGroupRemoveUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGroupRemoveUserCompleted);
            }
            base.InvokeAsync(this.onBeginGroupRemoveUserDelegate, new object[] {
                        groupId,
                        userId}, this.onEndGroupRemoveUserDelegate, this.onGroupRemoveUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGetUserGroups(int sserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserGroups(sserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group> DataBoundApp1.ServiceReference1.IService1.EndGetUserGroups(System.IAsyncResult result) {
            return base.Channel.EndGetUserGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetUserGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sserId = ((int)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGetUserGroups(sserId, callback, asyncState);
        }
        
        private object[] OnEndGetUserGroups(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group> retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGetUserGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserGroupsCompleted(object state) {
            if ((this.GetUserGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserGroupsCompleted(this, new GetUserGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserGroupsAsync(int sserId) {
            this.GetUserGroupsAsync(sserId, null);
        }
        
        public void GetUserGroupsAsync(int sserId, object userState) {
            if ((this.onBeginGetUserGroupsDelegate == null)) {
                this.onBeginGetUserGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetUserGroups);
            }
            if ((this.onEndGetUserGroupsDelegate == null)) {
                this.onEndGetUserGroupsDelegate = new EndOperationDelegate(this.OnEndGetUserGroups);
            }
            if ((this.onGetUserGroupsCompletedDelegate == null)) {
                this.onGetUserGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserGroupsDelegate, new object[] {
                        sserId}, this.onEndGetUserGroupsDelegate, this.onGetUserGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGetGroupNotes(int groupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupNotes(groupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> DataBoundApp1.ServiceReference1.IService1.EndGetGroupNotes(System.IAsyncResult result) {
            return base.Channel.EndGetGroupNotes(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupNotes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGetGroupNotes(groupId, callback, asyncState);
        }
        
        private object[] OnEndGetGroupNotes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGetGroupNotes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupNotesCompleted(object state) {
            if ((this.GetGroupNotesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupNotesCompleted(this, new GetGroupNotesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupNotesAsync(int groupId) {
            this.GetGroupNotesAsync(groupId, null);
        }
        
        public void GetGroupNotesAsync(int groupId, object userState) {
            if ((this.onBeginGetGroupNotesDelegate == null)) {
                this.onBeginGetGroupNotesDelegate = new BeginOperationDelegate(this.OnBeginGetGroupNotes);
            }
            if ((this.onEndGetGroupNotesDelegate == null)) {
                this.onEndGetGroupNotesDelegate = new EndOperationDelegate(this.OnEndGetGroupNotes);
            }
            if ((this.onGetGroupNotesCompletedDelegate == null)) {
                this.onGetGroupNotesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupNotesCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupNotesDelegate, new object[] {
                        groupId}, this.onEndGetGroupNotesDelegate, this.onGetGroupNotesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGetGroupUsers(int groupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupUsers(groupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> DataBoundApp1.ServiceReference1.IService1.EndGetGroupUsers(System.IAsyncResult result) {
            return base.Channel.EndGetGroupUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int groupId = ((int)(inValues[0]));
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGetGroupUsers(groupId, callback, asyncState);
        }
        
        private object[] OnEndGetGroupUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGetGroupUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupUsersCompleted(object state) {
            if ((this.GetGroupUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupUsersCompleted(this, new GetGroupUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupUsersAsync(int groupId) {
            this.GetGroupUsersAsync(groupId, null);
        }
        
        public void GetGroupUsersAsync(int groupId, object userState) {
            if ((this.onBeginGetGroupUsersDelegate == null)) {
                this.onBeginGetGroupUsersDelegate = new BeginOperationDelegate(this.OnBeginGetGroupUsers);
            }
            if ((this.onEndGetGroupUsersDelegate == null)) {
                this.onEndGetGroupUsersDelegate = new EndOperationDelegate(this.OnEndGetGroupUsers);
            }
            if ((this.onGetGroupUsersCompletedDelegate == null)) {
                this.onGetGroupUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupUsersDelegate, new object[] {
                        groupId}, this.onEndGetGroupUsersDelegate, this.onGetGroupUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DataBoundApp1.ServiceReference1.IService1.BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> DataBoundApp1.ServiceReference1.IService1.EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((DataBoundApp1.ServiceReference1.IService1)(this)).BeginGetUsers(callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> retVal = ((DataBoundApp1.ServiceReference1.IService1)(this)).EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        public void GetUsersAsync(object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DataBoundApp1.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<DataBoundApp1.ServiceReference1.IService1>, DataBoundApp1.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<DataBoundApp1.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(DataBoundApp1.ServiceReference1.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public int EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegister(DataBoundApp1.ServiceReference1.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("Register", _args, callback, asyncState);
                return _result;
            }
            
            public int EndRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("Register", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserNotes(int UserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserNotes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> EndGetUserNotes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> _result = ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note>)(base.EndInvoke("GetUserNotes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginNewNote(DataBoundApp1.ServiceReference1.Note note, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = note;
                System.IAsyncResult _result = base.BeginInvoke("NewNote", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNewNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("NewNote", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateNote(DataBoundApp1.ServiceReference1.Note note, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = note;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNote", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateNote", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveNote(int noteId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = noteId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveNote", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveNote", _args, result);
            }
            
            public System.IAsyncResult BeginNewGroup(DataBoundApp1.ServiceReference1.Group group, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = group;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("NewGroup", _args, callback, asyncState);
                return _result;
            }
            
            public int EndNewGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("NewGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveGroup(int groupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupId;
                System.IAsyncResult _result = base.BeginInvoke("RemoveGroup", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveGroup", _args, result);
            }
            
            public System.IAsyncResult BeginGroupAddNote(int groupId, int noteId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupId;
                _args[1] = noteId;
                System.IAsyncResult _result = base.BeginInvoke("GroupAddNote", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupAddNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupAddNote", _args, result);
            }
            
            public System.IAsyncResult BeginGroupRemoveNote(int groupId, int noteId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupId;
                _args[1] = noteId;
                System.IAsyncResult _result = base.BeginInvoke("GroupRemoveNote", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupRemoveNote(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupRemoveNote", _args, result);
            }
            
            public System.IAsyncResult BeginGroupAddUser(int groupId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupId;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GroupAddUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupAddUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupAddUser", _args, result);
            }
            
            public System.IAsyncResult BeginGroupRemoveUser(int groupId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = groupId;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GroupRemoveUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGroupRemoveUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GroupRemoveUser", _args, result);
            }
            
            public System.IAsyncResult BeginGetUserGroups(int sserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sserId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserGroups", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group> EndGetUserGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group> _result = ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Group>)(base.EndInvoke("GetUserGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroupNotes(int groupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupId;
                System.IAsyncResult _result = base.BeginInvoke("GetGroupNotes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> EndGetGroupNotes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note> _result = ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.Note>)(base.EndInvoke("GetGroupNotes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroupUsers(int groupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = groupId;
                System.IAsyncResult _result = base.BeginInvoke("GetGroupUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> EndGetGroupUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> _result = ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User>)(base.EndInvoke("GetGroupUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> EndGetUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User> _result = ((System.Collections.ObjectModel.ObservableCollection<DataBoundApp1.ServiceReference1.User>)(base.EndInvoke("GetUsers", _args, result)));
                return _result;
            }
        }
    }
}
